meteor both server and client
collection of tools to work well together
javascript on front side and nodejs for back side
code resuability
atmospherejs.com	meteor specific packages
mongoDB




server
Node.js
MongoDB (CRUD)


Websockets (creates real-time data flow)



Client
client-side JavaScript
React (user interaction, updated data)

-------------------------------------------------------------------------------------
meteor npm install 
meteor to run 


---------------------------------
Server side with testing with  mocha in Meteor

mocha for tests
test driver
get in atmospherejs

To run our tests
meteor test --driver-package=practicalmeteor:mocha

    npm run test / npm test


assertion library for writing tests
expectjs
meteor npm install expect@1.20.2 --save-dev


remove note item
update note item


lots of tests for update method because it was very complex 

testing publications just like methods have these traits
    define them
    isolate them
    call them
    then assert things to see what comes back 

created a test suite 
create and test methods 
create and test publication 

----------------------------------------

Testing React 
enzyme 
meteor npm install --save-dev enzyme
react-addons-test-utils

spys are a way to mockout real functions

react-addons-pure-render-mixin (used behind the scenes) in relation to testing

    meteor add react-meteor-data    ===> connect function (takes redux's place)


-----------------------------------------

creation of the client
    adding and counting the list


meteor mongo
    db.notes.remove({})
    
        will manually remove notes 

--------------------------------

editor component
    -add input field and button
---------------------------------

refractor some code

----------------------------------
Heroku Deployment



heroku build shopping-list-bryan
heroku buildpacks:set https://github.com/AdmitHub/meteor-buildpack-horse.git
heroku addons:create mongolab:sandbox

 heroku addons:create mongolab
Creating mongolab on shopping-list-bryan... free
Welcome to mLab.  Your new subscription is being created and will be available shortly.  Please consult the mLab Add-on Admin UI to check on its progress.
Created mongolab-shallow-12121 as MONGODB_URI
Use heroku addons:docs mongolab to view documentation

heroku config:set ROOT_URL="https://shopping-list-bryan.herokuapp.com"





React
JSX
Meteor
DDP
Atmosphere.js
MongoDB
Robomongo
react-router
Heroku
Git
GitHub
JavaScript ES6
Mocha
Node
npm
CSS/SCSS



Meteor

Meteor, or MeteorJS, is a free and open-source isomorphic JavaScript web framework written using Node.js. Meteor allows for rapid 
prototyping and produces cross-platform code.

Meteor allows 

package meanings
react-dom - package provides DOM-specific methods that can be used at the top level of your app and as an escape hatch to get outside of the 
React model if you need to. 

Tracker -  has a simple dependency tracking system which allows it to automatically rerun templates and other computations whenever Session variables, database queries,
 and other data sources change.

 session - Session provides a global object on the client that you can use to store an arbitrary set of key-value pairs. Use it to store things like the currently selected item in a list.

 moment - Parse, validate, manipulate, and display dates and times in JavaScript.

 api - application programming interface

